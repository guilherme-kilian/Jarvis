@using Jarvis.Exceptions
@using Jarvis.Models.Auth
@using Jarvis.Components.Layout
@using Jarvis.Services

@page "/login"
@layout LoginLayout
@inject IAuthenticationService _authService
@inject NavigationManager _navManager

<h5>Criar conta</h5>

<FluentEditForm Model=_model OnValidSubmit=HandleSubmitAsync>
    <div class="d-flex flex-column">
        <FluentTextField @bind-Value=_model.Name></FluentTextField>
        <FluentTextField @bind-Value=_model.Email></FluentTextField>
        <FluentTextField @bind-Value=_model.Password></FluentTextField>
        <FluentButton Type="ButtonType.Submit">Cadastrar</FluentButton>
    </div>
</FluentEditForm>

<div class="d-flex justify-content-center">
    Já tem uma conta? <a href="javascript:;" @onclick=ChangePage>Entrar</a>
</div>

@code {
    [Parameter, EditorRequired]
    public EventCallback ChangePage { get; set; }

    private RegisterUserFrontModel _model = new();

    private async Task HandleSubmitAsync()
    {
        if (string.IsNullOrEmpty(_model.Email) || string.IsNullOrEmpty(_model.Password) || string.IsNullOrEmpty(_model.Name))
            return;

        try
        {
            await _authService.AuthenticateAsync(_model.Email, _model.Password);
            _navManager.NavigateTo("/");
        }
        catch (AuthenticationException)
        {
        }
    }
}
