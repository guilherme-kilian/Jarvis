@using Jarvis.Clients
@using Jarvis.Models.Tasks

@inject IJarvisApiClient _apiClient

<div class="card">
    <div class="card-body">
        <div class="d-flex">
            <input type="checkbox" @bind:after=CheckboxClicked @onclick:stopPropagation @bind=@_completed disabled="@(ChildContent != null)" />
            <h5 class="ms-2 @(_completed ? "text-decoration-line-through" : "")">@Task.Title</h5>
        </div>

        @if(Task.SubtaskCount > 0)
        {            
            <div>
                @(Task.CompletedCount)/@(Task.SubtaskCount) concluídas
            </div>
        }

        <div class="d-flex gap-1">
            @foreach (var tag in Task.Tags)
            {
                <Tag TagModel=tag />
            }
        </div>

        @if(ChildContent != null)
        {
            <div>
                @ChildContent
            </div>
        }
    </div>
</div>

@code {
    [Parameter, EditorRequired]
    public TaskModel Task { get; set; } = null!;

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    private bool _completed;

    protected override void OnInitialized()
    {
        _completed = Task.Completed;
    }

    private async Task CheckboxClicked()
    {
        await _apiClient.Tasks.UpdateStatusAsync(Task.Id);
    }
}
