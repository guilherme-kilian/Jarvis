@using Jarvis.Const
@using Jarvis.Extensions
@using Jarvis.Models.User
@using Jarvis.Services
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims

@inject NavigationManager _navManager
@inject PersistanceService _persistanceService

<CascadingValue Value=this>
    @ChildContent
</CascadingValue>

@code {
    [Parameter, EditorRequired]
    public RenderFragment? ChildContent { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState>? AuthenticationStateTask { get; set; }

    public UserModel? User { get; private set; }

    public async Task SetUserAsync(UserModel user)
    {
        User = user;
        await _persistanceService.SetToStorageAsync(user);
    }

    protected override async Task OnInitializedAsync()
    {
        if (AuthenticationStateTask is null)
            return;

        var auth = await AuthenticationStateTask;

        if (auth.User?.Identity is null || !auth.User.Identity.IsAuthenticated)
        {
            _navManager.NavigateTo("/login");
            return;
        }

        User = new UserModel
        {
            Id = auth.User.GetId(),
            Email = auth.User.GetEmail(),
            Name = auth.User.GetName(),
            ProfilePicture = auth.User.GetProfilePicture(),
            WinTheDayGoal = auth.User.GetDailyMeta(),
            Password = string.Empty,
        };
    }
}
