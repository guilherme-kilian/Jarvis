@page "/settings"
@using Jarvis.Clients
@using Jarvis.Components.Pages.Shared
@using Jarvis.Models.User
@using Microsoft.FluentUI.AspNetCore.Components.Extensions

@inject IJarvisApiClient _apiClient
@inject NavigationManager _navManager

<ConfigurationHeader Title="Configurações" />

@if (_update is null)
{
    <FluentProgress></FluentProgress>
}
else
{
    <div class="d-flex gap-2">
        <FluentButton>Geral</FluentButton>
        <FluentButton>Integrações</FluentButton>
    </div>
    <div class="d-flex justify-content-center">
        <img src="@_update.PictureUrl" />
        <a href="javascript:;" @onclick=EditAsync></a>
    </div>

    <FluentEditForm Model=_update>
        <FluentTextField @bind-Value=_update.Name Label="Nome" />
        <FluentLabel>Tags</FluentLabel>
        <FluentButton OnClick=RedirectToTags>Gerenciar tags</FluentButton>
        <FluentNumberField Label="Meta diária" @bind-Value=_update.WinTheDayGoal />
        <div>
            <FluentButton Color="@Color.Success.ToAttributeValue()" Type="ButtonType.Submit">Salvar</FluentButton>
        </div>
    </FluentEditForm>
}


@code {
    [CascadingParameter, EditorRequired]
    private CascadingUser? CascadingUser { get; set; }

    private UpdateUserModel? _update;

    protected override void OnInitialized()
    {
        if (CascadingUser?.User is null)
            return;

        var user = CascadingUser.User;

        _update = new()
        {
            WinTheDayGoal = user.WinTheDayGoal,
            Name = user.Name,
            PictureUrl = user.ProfilePicture,
        };
    }

    private void RedirectToTags()
    {
        _navManager.NavigateTo("/tags");
    }

    private Task EditAsync()
    {
        return Task.CompletedTask;
    }
}
