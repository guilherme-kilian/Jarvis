@using Jarvis.Components.Pages.Shared
@using Jarvis.Exceptions
@using Jarvis.Models.Auth
@using Jarvis.Components.Layout
@using Jarvis.Services

@layout LoginLayout
@inject IAuthenticationService _authService
@inject NavigationManager _navManager

<h5>Criar conta</h5>

<FluentEditForm Model=_model OnValidSubmit=HandleSubmitAsync>
    <div class="d-flex flex-column">
        <FluentTextField Required Label="Nome Completo" @bind-Value=_model.Name></FluentTextField>
        <FluentTextField Required Label="E-mail" @bind-Value=_model.Email></FluentTextField>
        <FluentTextField Required TextFieldType="TextFieldType.Password" Label="Senha" @bind-Value=_model.Password></FluentTextField>
        
        <SubmitButton Text="Cadastrar"></SubmitButton>
    </div>
</FluentEditForm>

<div class="d-flex justify-content-center">
    Já tem uma conta? <a href="javascript:;" @onclick=ChangePage>Entrar</a>
</div>

@code {
    [CascadingParameter, EditorRequired]
    private CascadingUser? CascadingUser { get; set; }

    [Parameter, EditorRequired]
    public EventCallback ChangePage { get; set; }

    private RegisterUserFrontModel _model = new();

    private async Task HandleSubmitAsync()
    {
        if (CascadingUser is null)
            return;

        try
        {
            var user = await _authService.AuthenticateAsync(_model);
            await CascadingUser.StoreUserAsync(user);
            _navManager.NavigateTo("/");
        }
        catch (AuthenticationException)
        {
        }
    }
}
