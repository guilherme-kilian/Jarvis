@using Jarvis.Clients
@using Jarvis.Components.Pages.Shared
@using Jarvis.Models.Tasks
@using Jarvis.Models.User
@using Jarvis.Models.WinTheDays
@using Jarvis.Utils
@using Microsoft.FluentUI.AspNetCore.Components.Extensions

@inject IJarvisApiClient _apiClient
@inject NavigationManager _navManager

<div class="card mt-4 rounded-3">
    <div class="card-body">
        <div class="d-flex justify-content-between">
            <div class="d-flex flex-column">
                <span>Ganhe o dia 🎯</span>
                <small>
                    @if (_hasMetaDefined)
                    {
                        <text>@(_model.Completed)/@(_model.TotalGoal) concluídas</text>
                    }
                    else
                    {
                        <text>Sem meta definida</text>
                    }
                </small>
            </div>
            <div>
                @if (_hasMetaDefined)
                {                    
                    <FluentProgressRing Max="100" Min="0" Value="@_percentage"
                                        Stroke=@ProgressStroke.Small
                                        Color="@(Color.Success.ToAttributeValue())">
                        <ChildContent>
                            @(_percentage)%
                        </ChildContent>

                    </FluentProgressRing>
                }
                else
                {
                    <button @onclick=RedirectToMeta class="btn btn-success">Definir meta 🚀</button>
                }
            </div>
        </div>
    </div>
</div>

@code {
    [CascadingParameter]
    private CascadingUser User { get; set; } = default!;

    [Parameter, EditorRequired]
    public List<TaskModel> Tasks { get; set; } = [];

    [Parameter, EditorRequired]
    public DateTime Date { get; set; }

    private int _percentage;

    private WinTheDayModel _model = new();

    private bool _hasMetaDefined;

    protected override async Task OnInitializedAsync()
    {
        _model = await _apiClient.WinTheDay.GetAsync();
        _percentage = (int)MathUtils.GetPercentage(_model.Completed, _model.TotalGoal);
        _hasMetaDefined = _model.Tasks.Count == User.User.WinTheDayGoal;
    }

    private void RedirectToMeta()
    {
        _navManager.NavigateTo("/meta");
    }
}
