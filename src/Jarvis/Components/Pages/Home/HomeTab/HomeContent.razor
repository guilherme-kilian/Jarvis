@using Jarvis.Clients
@using Jarvis.Components.Pages.Shared
@using Jarvis.Models.Tasks
@using Jarvis.Models.User
@using Microsoft.FluentUI.AspNetCore.Components.Extensions

@inject IJarvisApiClient _apiClient
@inject NavigationManager _navManager

<div class="d-flex flex-column gap-3">
    <MetaProgress Date=_date Tasks="@_tasks" />

    <DayPicker @bind-Date=_date @bind-Date:after=ReloadTasksAsync />

    @* <span>Agenda ⏰</span> *@

    <hr />

    <span>Hoje 🗓️</span>

    <div class="d-flex flex-column gap-2">
        @foreach (var task in _tasks)
        {
            <TaskCard Task=task />
        }
    </div>

    <div style="position:fixed; bottom:25px; right: 25px;">
        <FluentButton OnClick=@(RedirectToCreateTask) Class="rounded-circle" Color=@Color.Success.ToAttributeValue()>
            <FluentIcon Value="@(new Microsoft.FluentUI.AspNetCore.Components.Icons.Regular.Size20.Add())" />
        </FluentButton>
    </div>
</div>


@code {
    [Parameter, EditorRequired]
    public UserModel User { get; set; } = null!;

    private List<TaskModel> _tasks = [];

    private DateTime _date = DateTime.Now;

    protected override async Task OnInitializedAsync()
    {
        if (User is null)
            return;

        await ReloadTasksAsync();
    }

    private async Task ReloadTasksAsync()
    {
        _tasks = await _apiClient.Tasks.GetAsync(_date);
    }

    private void RedirectToCreateTask()
    {
        _navManager.NavigateTo("/tasks/create");
    }
}
